package szkeleton;

import java.util.ArrayList;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Player.java
//  @ Date : 3/24/2020
//  @ Author : 
//
//




public abstract class Player {
	//private int temperature;
	//private boolean isInWater;
	//private int remainingActions;
	//private boolean hasDivingGear;
	private ArrayList<Item> items;
	protected IceField field;
	private Game game;
	
	/**
	 * Megváltoztatja a játékos hőmérsékletét.
	 */
	public void ChangeTemperature(int dif) {
		MethodPrinter.Println(Skeleton.GetName(this) + ".ChangeTemperature(int dif) (" + dif + ")");
		boolean isdead = MethodPrinter.AskQuestion("Meghalt a játékos?");
		if(isdead) {
			game.Over(false);
		}
	}
	
	
	/**
	 * Felveszi a játékost a rajta álló játékosok közé.
	 * Felborul ha, túl sokan állnak így már rajta.
	 */
	public boolean GetSaved(IceField f) {
		MethodPrinter.Println(Skeleton.GetName(this) + ".GetSaved(Icefield f)");
		boolean isinwater = MethodPrinter.AskQuestion("Vízben van a játékos?");
		if(isinwater == false) {
			return false;
		}
		MethodPrinter.IncreaseIndentation();
		f.Accept(this);
		game.PlayerSaved();
		field.Remove(this);
		field = f;
		MethodPrinter.DecreaseIndentation();
		return true;
	}
	
	public abstract void UseAbility(Direction d);
	
	public void Move(Direction d) {
		MethodPrinter.Println(Skeleton.GetName(this) + ".UseAbility(Direction d)");
		MethodPrinter.IncreaseIndentation();
		IceField newfield = field.GetNeighbour(d);
		if(newfield == null) {
			System.out.println("Nem lehet kimenni a pályáról!");
			return;
		}
		field.Remove(this);
		field = newfield;
		field.Accept(this);
		MethodPrinter.DecreaseIndentation();
	}
	
	public void UseItem(Item i) {
		MethodPrinter.Println(Skeleton.GetName(this) + ".UseItem(Item i)");
		MethodPrinter.IncreaseIndentation();
		i.Use(this);
		MethodPrinter.DecreaseIndentation();
	}
	
	public void PickUpItem() {
		MethodPrinter.Println(Skeleton.GetName(this) + ".PickUpItem()");
		MethodPrinter.IncreaseIndentation();
		field.TakeItem(this);
		MethodPrinter.DecreaseIndentation();
	}
	
	public void Dig() {
		MethodPrinter.Println(Skeleton.GetName(this) + ".Dig()");
		MethodPrinter.IncreaseIndentation();
		field.RemoveSnow(1);
		MethodPrinter.DecreaseIndentation();
	}
	
	public boolean AddItem(Item i) {
		MethodPrinter.Println(Skeleton.GetName(this) + ".AddItem(Item i)");
		MethodPrinter.IncreaseIndentation();
		for(Item j : items) {
			if(j.IsTheSame(i))
				return false;
		}
		items.add(i);
		MethodPrinter.DecreaseIndentation();
		return true;
	}
	
	public void SetRemainingActions(int a) {
		MethodPrinter.Println(Skeleton.GetName(this) + ".SetRemainingActions(int a) (" + a + ")");
	}
	
	public void FallInWater() {
		MethodPrinter.Println(Skeleton.GetName(this) + ".FallInWater()");
		MethodPrinter.IncreaseIndentation();
		game.PlayerFellInWater();
		MethodPrinter.DecreaseIndentation();
	}
	
	public void SetItem(Item i) {
		items.add(i);
	}
}